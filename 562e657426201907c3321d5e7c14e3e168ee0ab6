{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7dc7320b_c561c3e7",
        "filename": "profcollectd/libprofcollectd/scheduler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-11-03T17:42:37Z",
      "side": 1,
      "message": "explain why changing them into asynchronous?",
      "range": {
        "startLine": 171,
        "startChar": 12,
        "endLine": 171,
        "endChar": 13
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb06a1ff_7baaea4e",
        "filename": "profcollectd/libprofcollectd/scheduler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1087625
      },
      "writtenOn": "2020-11-03T18:04:56Z",
      "side": 1,
      "message": "If the processing takes too much time, this triggers a system health report about blocked binder service call.",
      "parentUuid": "7dc7320b_c561c3e7",
      "range": {
        "startLine": 171,
        "startChar": 12,
        "endLine": 171,
        "endChar": 13
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2dd8c79_182d4d13",
        "filename": "profcollectd/libprofcollectd/scheduler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-11-03T18:49:45Z",
      "side": 1,
      "message": "Add comment in code or commit msg?",
      "parentUuid": "cb06a1ff_7baaea4e",
      "range": {
        "startLine": 171,
        "startChar": 12,
        "endLine": 171,
        "endChar": 13
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1244ece_ba9985f6",
        "filename": "profcollectd/profcollectctl.rs",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-11-03T17:42:37Z",
      "side": 1,
      "message": "How do we know when reporting is finished or failed? Should we change profcollectctl to query status of profcollectd (maybe in another CL)?",
      "range": {
        "startLine": 66,
        "startChar": 49,
        "endLine": 66,
        "endChar": 59
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8cb86dc_c4fb0002",
        "filename": "profcollectd/profcollectctl.rs",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1087625
      },
      "writtenOn": "2020-11-03T18:04:56Z",
      "side": 1,
      "message": "We can print something to logcat? Blocking profcollectctl needs some major refactoring...",
      "parentUuid": "d1244ece_ba9985f6",
      "range": {
        "startLine": 66,
        "startChar": 49,
        "endLine": 66,
        "endChar": 59
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a961a667_fd05eb5c",
        "filename": "profcollectd/profcollectctl.rs",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-11-03T18:49:45Z",
      "side": 1,
      "message": "In my understanding, profcollectctl is a command line tool, it can sleep and wait until profcollectd is done. So why blocking it needs major refactoring? If we don\u0027t want to add a new method to query profcollectd status, we can check timestamp of report.zip, and wait until it is updated.",
      "parentUuid": "c8cb86dc_c4fb0002",
      "range": {
        "startLine": 66,
        "startChar": 49,
        "endLine": 66,
        "endChar": 59
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47f3c49a_7b66625d",
        "filename": "profcollectd/profcollectctl.rs",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1087625
      },
      "writtenOn": "2020-11-04T06:50:58Z",
      "side": 1,
      "message": "\u003e we can check timestamp of report.zip, and wait until it is updated\nThe issue here is that profcollectctl runs without root permission, it has no permission to check the status of report.zip.\n\nI think the only way to implement this is a callback...",
      "parentUuid": "a961a667_fd05eb5c",
      "range": {
        "startLine": 66,
        "startChar": 49,
        "endLine": 66,
        "endChar": 59
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb2d5676_0a770acb",
        "filename": "profcollectd/profcollectctl.rs",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-11-04T18:06:16Z",
      "side": 1,
      "message": "We can run profcollectctl under adb root, so not an issue?",
      "parentUuid": "47f3c49a_7b66625d",
      "range": {
        "startLine": 66,
        "startChar": 49,
        "endLine": 66,
        "endChar": 59
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3efb4e9_63736388",
        "filename": "profcollectd/profcollectctl.rs",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1087625
      },
      "writtenOn": "2020-11-04T18:10:41Z",
      "side": 1,
      "message": "The profile upload service (still WIP right now) cannot run under root, and it will need to invoke profcollectctl.",
      "parentUuid": "fb2d5676_0a770acb",
      "range": {
        "startLine": 66,
        "startChar": 49,
        "endLine": 66,
        "endChar": 59
      },
      "revId": "562e657426201907c3321d5e7c14e3e168ee0ab6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}