{
  "comments": [
    {
      "key": {
        "uuid": "eed5b0ba_a3c6daf1",
        "filename": "simpleperf/cmd_dumprecord.cpp",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-06-30T08:07:32Z",
      "side": 1,
      "message": "Rather than `DumpStringField`, is `ExtractStringField` more descriptive? I think of dumping as logging, rather than decoding, which is closer to what is happening here. An even better (after looking at the other functions) name might be `ExtractStringFieldAsString`.",
      "revId": "fc661499e048b4b3a2582f39be88d29ea2569bb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2eb1fd9_3f656570",
        "filename": "simpleperf/cmd_dumprecord.cpp",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-06-30T18:53:55Z",
      "side": 1,
      "message": "Done. Changed to ExtractStringField.\n\nMy first draft was to call printf() inside these function, so used Dump*. Then I found returning a string seems better, so changed implemented. But forgot to change function name.",
      "parentUuid": "eed5b0ba_a3c6daf1",
      "revId": "fc661499e048b4b3a2582f39be88d29ea2569bb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06c1e28b_11779890",
        "filename": "simpleperf/cmd_dumprecord.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-06-30T08:07:32Z",
      "side": 1,
      "message": "You can use http://www.cplusplus.com/reference/string/string/assign/ instead of looping here. The max size to copy would be `field.elem_count`.",
      "revId": "fc661499e048b4b3a2582f39be88d29ea2569bb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "614b9f9f_389993f3",
        "filename": "simpleperf/cmd_dumprecord.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-06-30T18:53:55Z",
      "side": 1,
      "message": "What I need here is strncpy() for std::string. assign seems doesn\u0027t support it.",
      "parentUuid": "06c1e28b_11779890",
      "revId": "fc661499e048b4b3a2582f39be88d29ea2569bb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3e32157_a0193135",
        "filename": "simpleperf/cmd_dumprecord.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-07-01T00:55:20Z",
      "side": 1,
      "message": "`string\u0026 assign (const char* s, size_t n)` exists. That should work, shouldn\u0027t it? If for some reason that isn\u0027t `strncpy` (the docs I see are a bit ambiguous), then certainly the `string\u0026 assign (const string\u0026 str, size_t subpos, size_t sublen \u003d npos)` variant does what you want with a `subpos` of 0.",
      "parentUuid": "614b9f9f_389993f3",
      "revId": "fc661499e048b4b3a2582f39be88d29ea2569bb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da484a53_11db729c",
        "filename": "simpleperf/cmd_dumprecord.cpp",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-06-30T08:07:32Z",
      "side": 1,
      "message": "s/Dump/Extract/ for all other cases too.",
      "revId": "fc661499e048b4b3a2582f39be88d29ea2569bb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6990639_25c98b7d",
        "filename": "simpleperf/cmd_dumprecord.cpp",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-06-30T18:53:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da484a53_11db729c",
      "revId": "fc661499e048b4b3a2582f39be88d29ea2569bb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}