{
  "comments": [
    {
      "key": {
        "uuid": "d01a7eb3_069a2fb9",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "i don\u0027t understand these macros. why do you need them? anyone reading this code needs to look up what these macros do, but what they do is so trivial that there\u0027s no value to the abstraction.",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_9a4e6c1a",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "I thought it could help improve readability. When I realized I need to write twelve \"if (xxx) { return false; }\" in this single method, I thought the normal code path was disturbed by this error detection code. So I use macros like RETURN_IF_FALSE, RETURN_IF_TRUE to make the error detection invisible as much as possible. I know it is less familiar than \"if (xxx) { return false; }\", but we can ignore the macro once we know what it does. Now I am confused which is more readable. But I do think remove RETURN_IF_TRUE is better, because making RETURN_IF_FALSE to be the only macro helps us ignore it. Any more comment about the readability of the code below?\n\nv1:\n  auto start_time \u003d std::chrono::steady_clock::now();\n  if (!StartCounting()) {\n    return false;\n  }\n  if (!workload-\u003eStart()) {\n    return false;\n  }\n  if (!workload-\u003eWaitFinish()) {\n    return false;\n  }\n  if (!StopCounting()) {\n    return false;\n  }\n  auto end_time \u003d std::chrono::steady_clock::now();\n\nv2:\n  auto start_time \u003d std::chrono::steady_clock::now();\n  RETURN_IF_FALSE(StartCounting());\n  RETURN_IF_FALSE(workload-\u003eStart());\n  RETURN_IF_FALSE(workload-\u003eWaitFinish());\n  RETURN_IF_FALSE(StopCounting());\n  auto end_time \u003d std::chrono::steady_clock::now();",
      "parentUuid": "d01a7eb3_069a2fb9",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d08d1e46_82df0a54",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-22T01:30:42Z",
      "side": 1,
      "message": "i think you\u0027re confusing \"readable\" with \"fewer lines\". i agree that v1 isn\u0027t very good, but v2 is worse, because there\u0027s more to think about.\n\nobvious questions that come to mind given v1:\n\n1. can StopCounting actually fail? (given that the StartCounting succeeded.) if so, does that actually imply that the command failed?\n\n2. if Start or WaitFinish fails, shouldn\u0027t we StopCounting anyway?\n\n3. do we ever want to Start without calling WaitFinish? do we really just want a \"Run\" that doesn\u0027t return until everything\u0027s over?\n\ni suspect it should look more like this:\n\n  if (!StartCounting()) return false;\n  bool success \u003d workload-\u003eRun();\n  StopCounting();\n\n  ...\n\nyou probably want a class so you can use RAII to do your timing too.",
      "parentUuid": "f02302ea_9a4e6c1a",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "309d9a70_1d39b69f",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-22T23:16:28Z",
      "side": 1,
      "message": "Macros are removed.\n1. I don\u0027t know if StopCounting can fail, the kernel knows it. I think we don\u0027t need to work with failure in the kernel or the environment. It just stops working once something doesn\u0027t meet the expectation. I think It is easier to consider in that way.\n2. I think it doesn\u0027t matter, we will close the event_fd finally. (It makes me think StatCommand is not a good place to hold measured_events_ resources, because it has only one global instance. Using a new class to implement stat command seems to be better.)\n3. Here we use a combination of (Start + WaitFinish), and in cmd_record we need a combination of (Start + IsFinish).",
      "parentUuid": "d08d1e46_82df0a54",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "302afabf_c3676a97",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "is this necessary? couldn\u0027t we just default to { \"sleep\", \"999999999\" } arguments and reuse all the same code as the normal path? that would mean less code (which is a good thing in itself) and mean more testing of the regular path (because we\u0027re always going down it).",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_372674b3",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "This is absolutely not necessary. And it is only useful when we are collecting system wide information. The only benefit is that it costs less resource. Because you prefer to link libsimpleperf.so into \"perf profile collection daemon\", so I think you may want to avoid fork() and exec() if possible. But your comment about less code and regular path are good consideration on the other side. After all, I prefer keep current code a little, but it is up to you.",
      "parentUuid": "302afabf_c3676a97",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "309d9a70_f75ed8c3",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-22T01:30:42Z",
      "side": 1,
      "message": "if it\u0027s not necessary, let\u0027s get rid of it. only having one path to maintain is far more valuable to us than saving a fork in one caller.",
      "parentUuid": "d01a7eb3_372674b3",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "309d9a70_dd4e4ec8",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-22T23:16:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "309d9a70_f75ed8c3",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_a6da4310",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "(this is a perfect example of where the new macros make things less readable.)",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_77f0ec61",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Do you mean mix using RETURN_IF_TRUE and RETURN_IF_FALSE? RETURN_IF_TRUE removed.",
      "parentUuid": "f02302ea_a6da4310",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_610b0d5e",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "android::base::Split?",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_b786e468",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d01a7eb3_610b0d5e",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_e1feddaa",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "report_unsupported_types",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_d5ed573a",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d01a7eb3_e1feddaa",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "302afabf_63a5de28",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "no need to duplicate this.\n\n  LOG(report_unsupported_types ? ERROR : DEBUG) \u003c\u003c ...",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_b5ea631e",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Because LOG(severity) macro is mapped to android::base::severity, we can\u0027t use LOG(xxx ? ERROR : DEBUG), so (xxx ? LOG(ERROR) : LOG(DEBUG)) is used instead.",
      "parentUuid": "302afabf_63a5de28",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "302afabf_c3992af8",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "the default list",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_374cb4ce",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "302afabf_c3992af8",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_e661dbb9",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 343,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "since this isn\u0027t important, how about we just use the printf \u0027 modifier -- even though it isn\u0027t currently implemented on Android -- and come back and fix that later?",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_7996254c",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 343,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done. I didn\u0027t notice this modifier.",
      "parentUuid": "f02302ea_e661dbb9",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_a63ec388",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "this seems like it would be testable if we broke it in two, separating the file reading from the parsing.",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_b9c9bdfc",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f02302ea_a63ec388",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_8648df3f",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "\"re\"",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_1a49dfbd",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f02302ea_8648df3f",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "302afabf_4301ba8a",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "what use is this?",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_bdda4563",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "read line from file. control resource of fp and buffer.",
      "parentUuid": "302afabf_4301ba8a",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_46c9c72b",
        "filename": "simpleperf/perf_event.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "it\u0027s probably clearer to give all your types CamelCaseNames.\n\nthe name is a bit confusing too. what is this class for? it seems like you only use it to read data from the perf event fd. so this is some kernel type, but one that isn\u0027t in perf_event.h? does it have a name in the kernel we can just use?",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_0872350b",
        "filename": "simpleperf/perf_event.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "the structure is not in kernel, but in the manual of perf_event_open syscall. Because the layout depends on whether flags like PERF_FORMAT_TOTAL_TIME_ENABLED are set, so there is no kernel type for it.\nYes, defining read_format here exposes too much details, and we\u0027d better hide that in event_fd.cpp and event_attr.cpp. Structure moved to event_fd.h and renamed to PerfCounter. I also added comment in CreateDefaultAttrToMonitorEvent() in event_attr.cpp.",
      "parentUuid": "f02302ea_46c9c72b",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "302afabf_e31b8ef2",
        "filename": "simpleperf/perf_event.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "event_count\n\n(unless we\u0027re using the same names as the kernel.)",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_48638d3f",
        "filename": "simpleperf/perf_event.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "It was a mistake of using wrong name.",
      "parentUuid": "302afabf_e31b8ef2",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_41c89157",
        "filename": "simpleperf/utils.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "this is confusing because you don\u0027t actually use \u0027filename\u0027 except for error reporting.\n\nyou can\u0027t use ReadFdToString because you only want to read \u0027bytes\u0027 bytes? in which case the name here is misleading because we\u0027re not reading the whole file. ReadN? (yeah, that\u0027s not a great name either but it\u0027s late, i\u0027m sick, and i spent too many years using Plan 9 [http://man.cat-v.org/plan_9/2/read] so it\u0027s all that\u0027s coming to mind.)",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "302afabf_46726362",
        "filename": "simpleperf/utils.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "function name is changed to ReadNBytesFromFile. And error reporting is moved to the place using it, namely EventFd::ReadCounter().",
      "parentUuid": "d01a7eb3_41c89157",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_a186a568",
        "filename": "simpleperf/workload.cpp",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "FATAL?",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02302ea_bfd35dd7",
        "filename": "simpleperf/workload.cpp",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d01a7eb3_a186a568",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_e19ffda9",
        "filename": "simpleperf/workload.cpp",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-21T05:17:50Z",
      "side": 1,
      "message": "LOG(FATAL)?",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d01a7eb3_8300c605",
        "filename": "simpleperf/workload.cpp",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-04-21T21:04:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d01a7eb3_e19ffda9",
      "revId": "2dd53e365146f4de0a22b2554db1b3026bee07e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}