{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "df5ecb7c_e346e131",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1347762
      },
      "writtenOn": "2024-03-01T17:16:51Z",
      "side": 1,
      "message": "Thanks Paulsu.\n\nJust one quick question: \nWhat is the user interface to use this new features? Does the user need to know which PMU event has HW errata and which PMU event does not, if yes, can we not require the user to know such detailed information? I am flexible with any UI design, but reluctant to have bugs coming for inquiry on replaced events user should use.",
      "revId": "b5e3eaf99edf70575355fc66c99f75196f9f547c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbea3500_4d3c2f9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1964597
      },
      "writtenOn": "2024-03-04T17:03:18Z",
      "side": 1,
      "message": "The user do not need to know which PMU has errata. Simpleperf will replace PMU has errta with event defined in simpleperf/event_table.json.\nFor output, user will see a warning and result of replaced events.\n\n\nCommand:\nsimpleperf stat --csv -a -e armv8_pmuv3/l3d_cache_refill/ --duration  5 --per-core\n\nOutput:\nraw-l3d-cache-refill is replaced to raw-l3d-cache-refill-rd for cpu Cortex-A510 because the event is not supported for the core.\n The replace use extra counter for core. You can use --cpu cpu_ids to bypass auto replace.\nPerformance counter statistics,\n0,16449,raw-l3d-cache-refill-rd,16.377,K/sec,\n1,25244,raw-l3d-cache-refill-rd,25.107,K/sec,\n2,20875,raw-l3d-cache-refill-rd,20.751,K/sec,\n3,18608,raw-l3d-cache-refill-rd,18.489,K/sec,\n4,1946,raw-l3d-cache-refill,1.931,K/sec,\n5,1831,raw-l3d-cache-refill,1.816,K/sec,\n6,676,raw-l3d-cache-refill,670.165,/sec,\n7,5347,raw-l3d-cache-refill,5.299,K/sec,\n8,10093,raw-l3d-cache-refill,10.003,K/sec,",
      "parentUuid": "df5ecb7c_e346e131",
      "revId": "b5e3eaf99edf70575355fc66c99f75196f9f547c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "223933a0_376c04b2",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 3
      },
      "lineNbr": 393,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2024-02-29T22:33:25Z",
      "side": 1,
      "message": "To make sure we don\u0027t happen to replace other event types having the same type-\u003econfig.\n```suggestion\n    const EventType* type \u003d FindEventTypeByName(event_type_name);\n    if (type-\u003etype !\u003d PERF_TYPE_RAW) {\n      return false;\n    }\n```",
      "range": {
        "startLine": 393,
        "startChar": 64,
        "endLine": 393,
        "endChar": 65
      },
      "revId": "b5e3eaf99edf70575355fc66c99f75196f9f547c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d0dde62_140ec40a",
        "filename": "simpleperf/cmd_stat.cpp",
        "patchSetId": 3
      },
      "lineNbr": 393,
      "author": {
        "id": 1964597
      },
      "writtenOn": "2024-03-04T17:03:18Z",
      "side": 1,
      "message": "Fix applied.",
      "parentUuid": "223933a0_376c04b2",
      "range": {
        "startLine": 393,
        "startChar": 64,
        "endLine": 393,
        "endChar": 65
      },
      "revId": "b5e3eaf99edf70575355fc66c99f75196f9f547c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12317f62_426776c8",
        "filename": "simpleperf/event_selection_set.h",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2024-02-29T22:33:25Z",
      "side": 1,
      "message": "Instead of adding three functions modifying cpus, I feel it\u0027s easier to pass below data structure to EventSelectionSet:\n\nstd::map\u003cint, std::map\u003cuint64_t, uint64_t\u003e\u003e raw_event_replace_cpu_map\n\nIt maps from cpu number to how we want to replace raw events on that cpu.\nSay we want to replace 0x2A to 0xA2 on cpu 0. we can let raw_event_replace_cpu_map[0][0x2A] \u003d 0xA2.\n\nThen we can use this map in EventSelectionSet::OpenEventFilesOnGroup() to modify selection.event_attr.",
      "range": {
        "startLine": 133,
        "startChar": 7,
        "endLine": 133,
        "endChar": 16
      },
      "revId": "b5e3eaf99edf70575355fc66c99f75196f9f547c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}