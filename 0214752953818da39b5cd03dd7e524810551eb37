{
  "comments": [
    {
      "key": {
        "uuid": "a68d5001_e42cb20f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2020-09-09T10:52:59Z",
      "side": 1,
      "message": "Most ( if not every ) QCOM device is affected by this issue and can\u0027t boot R with Q vendor.\nI know it\u0027s not an elegant solution, but I it\u0027s breaking init.\nEric: Any input on what to do?",
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6121aa97_6ff79edc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2020-09-09T10:55:21Z",
      "side": 1,
      "message": "Jeff: if we allow vendor to do that we\u0027d have to add something like that\nallow vendor_init system_data_file:dir { open getattr ioctl };\n",
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c892911d_12530011",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2020-09-09T19:17:20Z",
      "side": 1,
      "message": "I don\u0027t understand this problem.  If the mkdir is failing, wouldn\u0027t it have failed in Android Q too, for the same reason?  What changed?",
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2cb4629_63d3ebbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2020-09-09T19:36:36Z",
      "side": 1,
      "message": "It indeed failed in Q as well, but wasn\u0027t fatal.\nNow that we use fscrypt ioctl mechanism to load/check the policy on directory, while still failing, it\u0027s now also fatal.\nThe old init attempted to do the same ( probably an actual error in the code that was accidentally fixed in https://android-review.googlesource.com/c/platform/system/extras/+/1114962 ).",
      "parentUuid": "c892911d_12530011",
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa000a0a_b021d2df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2020-09-09T19:55:27Z",
      "side": 1,
      "message": "But your change is claiming that the directory can\u0027t even be opened.  The Android Q code returned an error if the directory can\u0027t be opened too.  (opendir() in is_dir_empty() would fail, is_dir_empty() would return false, and fscrypt_policy_ensure() would return -1.)  So that isn\u0027t something that changed.",
      "parentUuid": "a2cb4629_63d3ebbc",
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f736d20_c8b03591",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2020-09-09T20:16:25Z",
      "side": 1,
      "message": "The more I look into it the less I understand how it could\u0027ve worked in Q\nIndeed the old code should\u0027ve errored out as well\nselinux perms look the same",
      "parentUuid": "aa000a0a_b021d2df",
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbf10622_ab0c572a",
        "filename": "libfscrypt/fscrypt.cpp",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2020-09-09T19:17:20Z",
      "side": 1,
      "message": "We can\u0027t just ignore errors here.  It could result in directories silently not being encrypted.",
      "range": {
        "startLine": 325,
        "startChar": 15,
        "endLine": 325,
        "endChar": 19
      },
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "045562a0_bb4e757b",
        "filename": "libfscrypt/fscrypt.cpp",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2020-09-09T19:36:36Z",
      "side": 1,
      "message": "I know it\u0027s wrong.",
      "parentUuid": "cbf10622_ab0c572a",
      "range": {
        "startLine": 325,
        "startChar": 15,
        "endLine": 325,
        "endChar": 19
      },
      "revId": "0214752953818da39b5cd03dd7e524810551eb37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}