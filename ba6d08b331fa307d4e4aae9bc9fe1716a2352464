{
  "comments": [
    {
      "key": {
        "uuid": "6c8fb848_1cabb734",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2020-08-21T19:29:40Z",
      "side": 1,
      "message": "keunyoung@ and jaegeuk@, this is a very old change.  Are you thinking it\u0027s time to revive it, now that ext4 encryption has been around for a long time?  If so, the change will need to be rebased on the latest AOSP master branch.  Also, will other places need to be updated to add the encrypt feature too?",
      "revId": "ba6d08b331fa307d4e4aae9bc9fe1716a2352464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52c7ba8e_83f0d07c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2020-08-21T19:50:42Z",
      "side": 1,
      "message": "I didn\u0027t see FEATURE_INCOMPAT_ENCRYPT flag in make_ext4fs code, so I wanted to check if we need to add it or not.",
      "revId": "ba6d08b331fa307d4e4aae9bc9fe1716a2352464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b49ac4e9_9dce5dbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2020-08-21T19:58:08Z",
      "side": 1,
      "message": "make_ext4fs was deleted 2 years ago, as it was replaced by mke2fs: https://android-review.googlesource.com/c/platform/system/extras/+/708003\n\nBut adding the encrypt feature to new filesystems is still something that could make sense.  That would mean passing \u0027-O encrypt\u0027 to mke2fs.\n\nHence why I said that this change would need to be rebased onto AOSP master if it\u0027s still relevant.",
      "parentUuid": "52c7ba8e_83f0d07c",
      "revId": "ba6d08b331fa307d4e4aae9bc9fe1716a2352464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c28deaa6_807e086f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2020-08-21T20:05:16Z",
      "side": 1,
      "message": "Sorry, I forgot that deletion story. Double checking what we have, we are actually adding it from fs_mgr in tune_encrypt stage. So this CL can be ignored.\n\nThis CL is no longer necessary as we have addressed it already.",
      "revId": "ba6d08b331fa307d4e4aae9bc9fe1716a2352464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3c9af2d_c5162699",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2020-08-21T20:14:23Z",
      "side": 1,
      "message": "Right, currently we format the filesystem without the encrypt feature and add it using tune2fs at first boot.  It works, *however* it would still be faster and simpler to simply enable the encrypt feature from the beginning, using \u0027mke2fs -O encrypt\u0027.  I rejected this approach originally because I was worried that some devices with very old kernels (which don\u0027t know about the \u0027encrypt\u0027 feature, so would refuse to mount a filesystem with it set) would be upgraded to the latest version of Android.  But maybe now enough time has elapsed that we can now assume that any device that will run the next version of Android will have a kernel that knows about ext4 encryption.",
      "parentUuid": "c28deaa6_807e086f",
      "revId": "ba6d08b331fa307d4e4aae9bc9fe1716a2352464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}