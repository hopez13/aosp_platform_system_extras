{
  "comments": [
    {
      "key": {
        "uuid": "eeba9520_83b70e97",
        "filename": "toolchain-extras/profile-extras.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2019-03-25T21:00:45Z",
      "side": 1,
      "message": "You should probably be using sigaction and storing the full struct sigaction, because the existing handler might do so as well. (And properly handling all of the flags is a pain in the ass, see: https://android.googlesource.com/platform/art/+/refs/heads/master/sigchainlib/sigchain.cc#274 for code that attempts to do so)\n\nWho calls init_profile_extras? Do we actually need to delegate to the existing handler, or can we just assume that if you\u0027re calling this function, you know that SIGUSR1 is getting blown away?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "86a73c500e376375c3557003f41f8889b3e3d9bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cf8941b_b6866f5f",
        "filename": "toolchain-extras/profile-extras.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-03-25T23:17:33Z",
      "side": 1,
      "message": "init_profile_extras() gets installed at load-time (it\u0027s used to initialize the global __profile_extras down below).  Assuming that no other signal handlers get installed at load time, the only other thing this can break is if this library gets dlopen-ed by a process that already has a signal handler for SIGUSR1.",
      "parentUuid": "eeba9520_83b70e97",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "86a73c500e376375c3557003f41f8889b3e3d9bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bcd1856_e7817421",
        "filename": "toolchain-extras/profile-extras.cpp",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-03-25T20:51:31Z",
      "side": 1,
      "message": "+jmgao for sigchain-related stuff.  \u003c-- not sure what that means.\n\nenh\u003e also: do we want to reserve a realtime signal for this?\n\nMaybe?  What are the trade-offs?\n\nWe should at least move to SIGUSR2 since SIGUSR1 appears to trigger GC in the runtime.",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 23
      },
      "revId": "86a73c500e376375c3557003f41f8889b3e3d9bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eeba945_cddc3594",
        "filename": "toolchain-extras/profile-extras.cpp",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-03-25T23:55:23Z",
      "side": 1,
      "message": "\u003e Maybe?  What are the trade-offs?\n\npro: you get a signal reserved just for you, that you know no-one else can use.\ncon: small bionic change to actually reserve that signal.",
      "parentUuid": "3bcd1856_e7817421",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 23
      },
      "revId": "86a73c500e376375c3557003f41f8889b3e3d9bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e148763_fee097ef",
        "filename": "toolchain-extras/profile-extras.cpp",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2019-03-26T00:25:00Z",
      "side": 1,
      "message": "Looks like a real-time signal is the best option then - it removes the pain points with handling previously-registered signal handlers.",
      "parentUuid": "7eeba945_cddc3594",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 23
      },
      "revId": "86a73c500e376375c3557003f41f8889b3e3d9bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}