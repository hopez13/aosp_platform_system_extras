{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d23e7dde_f2ea9277",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Looks good so far, just some minor linting + formatting work.",
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95577643_6f5ba522",
        "filename": "torq/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Nit: Change to 2024",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0d040e3_c71df17e",
        "filename": "torq/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Added, thank you.",
      "parentUuid": "95577643_6f5ba522",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14aaa465_c4709306",
        "filename": "torq/command.py",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:52:17Z",
      "side": 1,
      "message": "Can we raise `NotImplementedError` if these are abstract.",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 8
      },
      "fixSuggestions": [
        {
          "fixId": "f0cdb506_9e7318f7",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/command.py",
              "range": {
                "startLine": 13,
                "startChar": 0,
                "endLine": 14,
                "endChar": 0
              },
              "replacement": "    raise NotImplementedError\n"
            },
            {
              "path": "torq/command.py",
              "range": {
                "startLine": 16,
                "startChar": 0,
                "endLine": 17,
                "endChar": 0
              },
              "replacement": "    raise NotImplementedError\n"
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38b5ba49_735d14c5",
        "filename": "torq/command.py",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14aaa465_c4709306",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 8
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ae6536a_f816352a",
        "filename": "torq/command_executor.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "There\u0027s some repetitive code here. Could we create a parent CommandExecutor class?\n\nAlternatively, are we planning on adding different functionality for each CommandExecutor? It seems like we could just use a generic CommandExecutor to validate and execute.",
      "range": {
        "startLine": 1,
        "startChar": 6,
        "endLine": 1,
        "endChar": 29
      },
      "fixSuggestions": [
        {
          "fixId": "a9e6ddac_90fc6a06",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/command_executor.py",
              "range": {
                "startLine": 1,
                "startChar": 0,
                "endLine": 2,
                "endChar": 0
              },
              "replacement": "class CommandExecutor:\n"
            },
            {
              "path": "torq/command_executor.py",
              "range": {
                "startLine": 5,
                "startChar": 0,
                "endLine": 7,
                "endChar": 0
              },
              "replacement": "  def execute(self, command):\n    error \u003d command.validate()\n"
            },
            {
              "path": "torq/command_executor.py",
              "range": {
                "startLine": 9,
                "startChar": 0,
                "endLine": 34,
                "endChar": 0
              },
              "replacement": "    print(\"executing command\")\n"
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ee05d0e_28bb2271",
        "filename": "torq/command_executor.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "The code right now is mostly for testing that the program is currently worked. For instance, if I run a configCommand, it will print to me that I have validated the args of and executed a config command. Eventually, these execute functions will be extremely different and interact with the device very differently.",
      "parentUuid": "9ae6536a_f816352a",
      "range": {
        "startLine": 1,
        "startChar": 6,
        "endLine": 1,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "357d67c4_8522fd5a",
        "filename": "torq/command_executor.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-12T17:18:31Z",
      "side": 1,
      "message": "In that case, I think we should consider having a base class. Right now they share a common functionality.",
      "parentUuid": "1ee05d0e_28bb2271",
      "range": {
        "startLine": 1,
        "startChar": 6,
        "endLine": 1,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9b55fcc_1fd07bf1",
        "filename": "torq/command_executor.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T19:37:49Z",
      "side": 1,
      "message": "Thank you, I implemented the Superclass.",
      "parentUuid": "357d67c4_8522fd5a",
      "range": {
        "startLine": 1,
        "startChar": 6,
        "endLine": 1,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac1fda0_c293676a",
        "filename": "torq/command_executor.py",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "For function parameters and local variables, let\u0027s just stick with snake_case per https://peps.python.org/pep-0008/#function-and-variable-names",
      "range": {
        "startLine": 18,
        "startChar": 12,
        "endLine": 18,
        "endChar": 21
      },
      "fixSuggestions": [
        {
          "fixId": "595c27af_2bc84a6d",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/command_executor.py",
              "range": {
                "startLine": 5,
                "startChar": 0,
                "endLine": 7,
                "endChar": 0
              },
              "replacement": "  def execute(self, profiler_command):\n    error \u003d profiler_command.validate()\n"
            },
            {
              "path": "torq/command_executor.py",
              "range": {
                "startLine": 17,
                "startChar": 0,
                "endLine": 19,
                "endChar": 0
              },
              "replacement": "  def execute(self, hw_command):\n    error \u003d hw_command.validate()\n"
            },
            {
              "path": "torq/command_executor.py",
              "range": {
                "startLine": 29,
                "startChar": 0,
                "endLine": 31,
                "endChar": 0
              },
              "replacement": "  def execute(self, config_command):\n    error \u003d config_command.validate()\n"
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a20d21a8_ae1a4478",
        "filename": "torq/command_executor.py",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Thank you, fixed.",
      "parentUuid": "3ac1fda0_c293676a",
      "range": {
        "startLine": 18,
        "startChar": 12,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2500099_3ae6bcef",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Please create a bug for this TODO.",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 27
      },
      "fixSuggestions": [
        {
          "fixId": "a8f63ebe_18cb929b",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/tests/torq_unit_test.py",
              "range": {
                "startLine": 7,
                "startChar": 0,
                "endLine": 8,
                "endChar": 0
              },
              "replacement": "    # TODO(b/111311111): Implement tests\n"
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "611011e6_54060d08",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Thank you, added.",
      "parentUuid": "c2500099_3ae6bcef",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 27
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a93eed8d_977b62d7",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Don\u0027t need this extraneous comment.",
      "range": {
        "startLine": 7,
        "startChar": 2,
        "endLine": 7,
        "endChar": 24
      },
      "fixSuggestions": [
        {
          "fixId": "01531644_3ddb6cfb",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 7,
                "startChar": 0,
                "endLine": 8,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5102409_97bcb432",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Thank you, removed the comment.",
      "parentUuid": "a93eed8d_977b62d7",
      "range": {
        "startLine": 7,
        "startChar": 2,
        "endLine": 7,
        "endChar": 24
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b46ea3d_c33811ba",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Nit: Reduce the white space between methods.",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 118,
        "endChar": 0
      },
      "fixSuggestions": [
        {
          "fixId": "935f44d4_984e7a34",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 120,
                "startChar": 0,
                "endLine": 121,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faabd75f_54bf2253",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Thank you, fixed it.",
      "parentUuid": "9b46ea3d_c33811ba",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 118,
        "endChar": 0
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d80c015_fb8ff459",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Nit: Remove extraneous comments.",
      "range": {
        "startLine": 122,
        "startChar": 2,
        "endLine": 122,
        "endChar": 11
      },
      "fixSuggestions": [
        {
          "fixId": "07a4d347_d540e449",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 122,
                "startChar": 0,
                "endLine": 124,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 191,
                "startChar": 0,
                "endLine": 193,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 212,
                "startChar": 0,
                "endLine": 214,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 289,
                "startChar": 0,
                "endLine": 291,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ed77104_993972c7",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Removed them, thank you.",
      "parentUuid": "7d80c015_fb8ff459",
      "range": {
        "startLine": 122,
        "startChar": 2,
        "endLine": 122,
        "endChar": 11
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6cb7a5c_cb599efb",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Can you extract this into a variable like `DEFAULT_BETWEEN_DUR_MS`.",
      "range": {
        "startLine": 216,
        "startChar": 28,
        "endLine": 216,
        "endChar": 33
      },
      "fixSuggestions": [
        {
          "fixId": "7a63ee46_ca2d38db",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 5,
                "startChar": 0,
                "endLine": 5,
                "endChar": 0
              },
              "replacement": "DEFAULT_BETWEEN_DUR_MS \u003d 10000\n\n"
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 35,
                "startChar": 0,
                "endLine": 36,
                "endChar": 0
              },
              "replacement": "  parser.add_argument(\u0027--between-dur-ms\u0027, type\u003dint,\n                      default\u003dDEFAULT_BETWEEN_DUR_MS,\n"
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 133,
                "startChar": 0,
                "endLine": 134,
                "endChar": 0
              },
              "replacement": "                                       args.between_dur_ms !\u003d\n                                       DEFAULT_BETWEEN_DUR_MS or\n"
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 216,
                "startChar": 0,
                "endLine": 217,
                "endChar": 0
              },
              "replacement": "  if args.between_dur_ms !\u003d DEFAULT_BETWEEN_DUR_MS and args.runs \u003d\u003d 1:\n"
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef563d87_f1f20fba",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Changed this, thank you.",
      "parentUuid": "f6cb7a5c_cb599efb",
      "range": {
        "startLine": 216,
        "startChar": 28,
        "endLine": 216,
        "endChar": 33
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cfcf2b8_d123a254",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Also what happens if we exceed the memory of the system?",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 309,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b1dfb5_fc141666",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Is it possible for this value to be negative. If so, let\u0027s use `\u003c 1`.",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 309,
        "endChar": 29
      },
      "fixSuggestions": [
        {
          "fixId": "b258dc31_c32601ca",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 309,
                "startChar": 0,
                "endLine": 310,
                "endChar": 0
              },
              "replacement": "    if args.memory[0] \u003c \"1\":\n"
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d0131fb_9c71934f",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "In the next step of the project, when we are implementing the execution of commands, we will begin to interact with the device and we will do further validation specific to the device for some cases. In this case, we will be validating that once the HWCommand.validate() method is implemented.",
      "parentUuid": "9cfcf2b8_d123a254",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 309,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b444a8dc_f1b76c91",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Because its passed \u003cint\u003eG format for memory, e.g. 4G, if it\u0027s passed as --memory -1G, the \"-\" and \"G\" confuses the command, as it thinks it passes in 2 options instead of 1. So if it\u0027s negative, it will recognize it as passing too many arguments and raise an error before we can check if it\u0027s negative here. However, 0G, -4, 4G are examples that pass this initial check because they are perceived as only 1 option, so in this code, I verified with this logic that we will only accept the 4G option.",
      "parentUuid": "43b1dfb5_fc141666",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 309,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bac461e_748b5896",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-12T17:18:31Z",
      "side": 1,
      "message": "Sounds good, thanks for checking.",
      "parentUuid": "b444a8dc_f1b76c91",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 309,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ec8c363_16075102",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-12T17:18:31Z",
      "side": 1,
      "message": "Sounds good if there is a plan to have a later check for this.",
      "parentUuid": "4d0131fb_9c71934f",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 309,
        "endChar": 29
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39b663b1_e6d47cfb",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 377,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-07-11T22:48:46Z",
      "side": 1,
      "message": "Nit: Don\u0027t need these extraneous comments.",
      "range": {
        "startLine": 377,
        "startChar": 2,
        "endLine": 377,
        "endChar": 25
      },
      "fixSuggestions": [
        {
          "fixId": "6bf7822a_2c1635fd",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 377,
                "startChar": 0,
                "endLine": 378,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6d9f7a9_6d641a42",
        "filename": "torq/torq.py",
        "patchSetId": 1
      },
      "lineNbr": 377,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T16:42:23Z",
      "side": 1,
      "message": "Removed this, thank you.",
      "parentUuid": "39b663b1_e6d47cfb",
      "range": {
        "startLine": 377,
        "startChar": 2,
        "endLine": 377,
        "endChar": 25
      },
      "revId": "c4c4bd437eaf6aab113a4c42ce260979e867db8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}