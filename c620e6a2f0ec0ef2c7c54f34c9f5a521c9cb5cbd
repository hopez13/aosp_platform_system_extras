{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2cf6f7a3_5db32914",
        "filename": "torq/command_executor.py",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-08-09T19:18:34Z",
      "side": 1,
      "message": "To make this truly, extensible we need to loop through `PREDEFINED_PERFETTO_CONFIGS` instead. This logic will break if we add a new predefined perfetto config to torq. Please, revise the code and make sure we are not accessing directly the values in the list, but that we are always iterating through the list. Also, we need to make sure we are not depending on the order of the values in the list, this makes things brittle.",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 82,
        "endChar": 24
      },
      "revId": "c620e6a2f0ec0ef2c7c54f34c9f5a521c9cb5cbd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25f7b132_82f77d44",
        "filename": "torq/command_executor.py",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-08-09T20:16:10Z",
      "side": 1,
      "message": "I now check if command.perfetto_config is in the list instead. If it\u0027s in the list,  I dynamically construct the name of the build function with command.perfetto_config and I use the getattr library to call it. If it\u0027s not in the list, we call build_custom_config in the future.",
      "parentUuid": "2cf6f7a3_5db32914",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 82,
        "endChar": 24
      },
      "revId": "c620e6a2f0ec0ef2c7c54f34c9f5a521c9cb5cbd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "401e206f_b5805c2b",
        "filename": "torq/command_executor.py",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 1978605
      },
      "writtenOn": "2024-08-09T21:10:30Z",
      "side": 1,
      "message": "Discussed offline. If we are concerned about ordering of values, these constant values should be in an Enum class ideally. However, using a map of constant values also makes sense if we want to avoid iterating over these options.\n\nThe use of `getattr` is creative, but we should probably avoid it per go/pystyle#power-features-definition",
      "parentUuid": "25f7b132_82f77d44",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 82,
        "endChar": 24
      },
      "revId": "c620e6a2f0ec0ef2c7c54f34c9f5a521c9cb5cbd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}