{
  "comments": [
    {
      "key": {
        "uuid": "1c037f92_ba5d7970",
        "filename": "tests/bootloader/bootctl.py",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-05-25T21:17:41Z",
      "side": 1,
      "message": "You haven\u0027t imported CalledProcessError. Run pylint.\n\nAlso, I don\u0027t think this is actually the behavior you\u0027re looking for. subprocess.CalledProcessError is raised if the call to adb itself fails. If you\u0027re looking to catch a command that returned a non-zero exit status *on the device*, you want adb.ShellError.\n\nhttps://cs.corp.google.com/aosp-master/development/python-packages/adb/device.py?q\u003dfile:device.py\u0026sq\u003dpackage:aosp-master\u0026dr\u0026l\u003d341\n\nOr, even better, use device.shell_nocheck, which returns (status, out, err): https://cs.corp.google.com/aosp-master/development/python-packages/adb/device.py?q\u003dfile:device.py\u0026sq\u003dpackage:aosp-master\u0026dr\u0026l\u003d355",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 43,
        "endChar": 31
      },
      "revId": "774b11bf8c0b96fc372c8c1edd1902bc74bdc240",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c037f92_5afb2555",
        "filename": "tests/bootloader/common.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-05-25T21:17:41Z",
      "side": 1,
      "message": "Shouldn\u0027t this be called shelltest.py?",
      "revId": "774b11bf8c0b96fc372c8c1edd1902bc74bdc240",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c24c3f2_d0061213",
        "filename": "tests/bootloader/common.py",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1085413
      },
      "writtenOn": "2016-05-24T21:50:38Z",
      "side": 1,
      "message": "FTR adb.get_device uses ANDROID_SERIAL internally, but I think it makes sense to use a separate env variable anyway.",
      "revId": "774b11bf8c0b96fc372c8c1edd1902bc74bdc240",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c037f92_fac2d115",
        "filename": "tests/bootloader/common.py",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-05-25T21:17:41Z",
      "side": 1,
      "message": "\u003e but I think it makes sense to use a separate env variable anyway.\n\nWhy?",
      "parentUuid": "3c24c3f2_d0061213",
      "revId": "774b11bf8c0b96fc372c8c1edd1902bc74bdc240",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c037f92_fab77192",
        "filename": "tests/bootloader/haltest.py",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-05-25T21:17:41Z",
      "side": 1,
      "message": "You\u0027re not doing anything with this result.",
      "revId": "774b11bf8c0b96fc372c8c1edd1902bc74bdc240",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}