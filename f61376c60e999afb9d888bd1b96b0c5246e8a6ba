{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f00f6eef_cefd679b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-10-13T20:47:45Z",
      "side": 1,
      "message": "Nice improvement!",
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b33d5f07_39a36343",
        "filename": "simpleperf/event_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-10-13T20:47:45Z",
      "side": 1,
      "message": "I see why you dropped the helper method, but almost wish there was a non-initializing check for this to keep the logic in one place rather than 2 very separate spots.",
      "range": {
        "startLine": 239,
        "startChar": 45,
        "endLine": 239,
        "endChar": 72
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe13d1cb_66a2efb6",
        "filename": "simpleperf/event_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-10-13T22:06:12Z",
      "side": 1,
      "message": "The reason to not use IsEtmEventType() is because checking name is more efficient. Improve it by encapsulating it in the EventType class.",
      "parentUuid": "b33d5f07_39a36343",
      "range": {
        "startLine": 239,
        "startChar": 45,
        "endLine": 239,
        "endChar": 72
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed473356_1bd8686c",
        "filename": "simpleperf/event_type.cpp",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-10-13T20:47:45Z",
      "side": 1,
      "message": "Does it make sense to abstract this loop/lookup with a helper function that just returns the first one (if it exists)? It\u0027s used above in line 363-364 as well.",
      "range": {
        "startLine": 374,
        "startChar": 0,
        "endLine": 375,
        "endChar": 84
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9e9b7a9_b0afa777",
        "filename": "simpleperf/event_type.cpp",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-10-13T22:06:12Z",
      "side": 1,
      "message": "Done. Thanks for reminding the duplication.",
      "parentUuid": "ed473356_1bd8686c",
      "range": {
        "startLine": 374,
        "startChar": 0,
        "endLine": 375,
        "endChar": 84
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b91cf92_6e639f64",
        "filename": "simpleperf/event_type.cpp",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-10-13T20:47:45Z",
      "side": 1,
      "message": "Similar question about abstracting this loop out to reduce complexity in these functions. It even can return the proper pointer type, moving the `static_cast` to that getter, rather than keeping it with the actual more important logic.",
      "range": {
        "startLine": 431,
        "startChar": 0,
        "endLine": 432,
        "endChar": 70
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e22cbfa5_abf6f4a1",
        "filename": "simpleperf/event_type.cpp",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-10-13T22:06:12Z",
      "side": 1,
      "message": "Done removing the duplication. But if moving static_cast, need to use generic return type. But ReadTracepointsFromFile() wants to return the unique_ptr\u003c\u003e\u0026 to replace its content. So I didn\u0027t move static_cast.",
      "parentUuid": "0b91cf92_6e639f64",
      "range": {
        "startLine": 431,
        "startChar": 0,
        "endLine": 432,
        "endChar": 70
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f136f8b_9ab511de",
        "filename": "simpleperf/event_type.cpp",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-10-14T03:22:12Z",
      "side": 1,
      "message": "So it\u0027s up to you, but you could create multiple functions (that call this base getter) instead with slightly different names, and then cast/return the appropriate type directly using the getter:\n\n```\nGetRawEventFinder()\nGetTracepointSystemFinder()\n...\n```\n\nI\u0027m not sure that it ultimately matters, because there aren\u0027t multiple callers for any of these functions yet, but if you think you would use it in multiple places, that could be beneficial. Thinking about this also caused me to catch the typo\u0027ed `SYSTEM` instead of `STRING` in my other comment. You wouldn\u0027t be able to accidentally use or cast it to the wrong type. I\u0027d only add the 3 getters you\u0027re using so far (not one per `EventFinderType` yet).",
      "parentUuid": "e22cbfa5_abf6f4a1",
      "range": {
        "startLine": 431,
        "startChar": 0,
        "endLine": 432,
        "endChar": 70
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d38d3039_7f9e5ca4",
        "filename": "simpleperf/event_type.cpp",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-10-14T04:24:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f136f8b_9ab511de",
      "range": {
        "startLine": 431,
        "startChar": 0,
        "endLine": 432,
        "endChar": 70
      },
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd96ddac_f10bcac6",
        "filename": "simpleperf/event_type.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-10-13T20:47:45Z",
      "side": 1,
      "message": "It might be worth a comment to describe that this halts further execution if `callback()` returns false.",
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f298c542_aa08532e",
        "filename": "simpleperf/event_type.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2020-10-13T22:06:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd96ddac_f10bcac6",
      "revId": "f61376c60e999afb9d888bd1b96b0c5246e8a6ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}