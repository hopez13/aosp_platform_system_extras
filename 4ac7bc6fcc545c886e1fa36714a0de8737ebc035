{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "448cf7f3_4eb5b94d",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "We had agreed that we should have a default value for duration. Let\u0027s make it 10000 ms.",
      "range": {
        "startLine": 18,
        "startChar": 2,
        "endLine": 20,
        "endChar": 69
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8d48f8a_829d500e",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Added it, thank you.",
      "parentUuid": "448cf7f3_4eb5b94d",
      "range": {
        "startLine": 18,
        "startChar": 2,
        "endLine": 20,
        "endChar": 69
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90529b5f_faf40817",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "So simpleperf-events could be many different events. Adding choices in this case would be inconvenient because we would need to add all of the simpleperf events into this list. \n\nFor this case, we should allow users to pass a string and similar to what we will do with the --exclude-ftrace-event and --include-ftrace-event, we will check if the value is valid in the command executor phase.",
      "range": {
        "startLine": 27,
        "startChar": 22,
        "endLine": 27,
        "endChar": 60
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af2cc85e_09cbeae4",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Removed this, thank you.",
      "parentUuid": "90529b5f_faf40817",
      "range": {
        "startLine": 27,
        "startChar": 22,
        "endLine": 27,
        "endChar": 60
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91da69cb_426d2b12",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Type should be boolean here. I think that would avoid the need of using choices.",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 37,
        "endChar": 61
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a91c411_1da20363",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "I tried before, but argparse actually handles the bool type very weirdly. It would create some other edge cases if we used type\u003dbool.",
      "parentUuid": "91da69cb_426d2b12",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 37,
        "endChar": 61
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b56fc128_9bc928a0",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-13T22:29:10Z",
      "side": 1,
      "message": "Maybe we can allow for choices, true, True, False, or False initially, and then into real bools in the validate_args function. I think this would still be less code then if used the Bool type.",
      "parentUuid": "6a91c411_1da20363",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 37,
        "endChar": 61
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "981e894f_a586c543",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Let\u0027s use this suggestion:\n\n```\nRemove the \u0027hw\u0027 or \u0027config\u0027 subcommand to profile the device instead.\n```",
      "range": {
        "startLine": 126,
        "startChar": 8,
        "endLine": 126,
        "endChar": 77
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a994645d_67b4f961",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Changed this, thank you.",
      "parentUuid": "981e894f_a586c543",
      "range": {
        "startLine": 126,
        "startChar": 8,
        "endLine": 126,
        "endChar": 77
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a33b5a4f_4a41cebf",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 134,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "This comment is not needed since the validation error message is already documenting this case.",
      "range": {
        "startLine": 133,
        "startChar": 2,
        "endLine": 134,
        "endChar": 51
      },
      "fixSuggestions": [
        {
          "fixId": "9da9769c_1cec3ad5",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 133,
                "startChar": 0,
                "endLine": 135,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae4c6060_f44574f0",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 134,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Removed this, thank you.",
      "parentUuid": "a33b5a4f_4a41cebf",
      "range": {
        "startLine": 133,
        "startChar": 2,
        "endLine": 134,
        "endChar": 51
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67da10c5_d6b78066",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 135,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "So lets avoid the use of magic numbers (https://go/tott/538, https://en.wikipedia.org/wiki/Magic_number_(programming)).\n\nLet\u0027s define a `MIN_DURATION_MS` constant and use it here.",
      "range": {
        "startLine": 135,
        "startChar": 47,
        "endLine": 135,
        "endChar": 51
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a360556d_9b623fb6",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 135,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Added this, thank you.",
      "parentUuid": "67da10c5_d6b78066",
      "range": {
        "startLine": 135,
        "startChar": 47,
        "endLine": 135,
        "endChar": 51
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "461b3b25_86cfd637",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 136,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Remove this comment. We don\u0027t comment things that are quite explicit by reading the code. Comments should be left for cases where it is hard to directly inferr the logic from the code.",
      "range": {
        "startLine": 136,
        "startChar": 4,
        "endLine": 136,
        "endChar": 45
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0240b17_c9643aa8",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 136,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Removed this, thank you.",
      "parentUuid": "461b3b25_86cfd637",
      "range": {
        "startLine": 136,
        "startChar": 4,
        "endLine": 136,
        "endChar": 45
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d591af_162cc67a",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "`to a value smaller than %d`.\n\nUse string formatting to get the value from `MIN_DURATION_MS`.",
      "range": {
        "startLine": 138,
        "startChar": 57,
        "endLine": 138,
        "endChar": 78
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dc402a5_42d4cd0c",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Changed this, thank you.",
      "parentUuid": "84d591af_162cc67a",
      "range": {
        "startLine": 138,
        "startChar": 57,
        "endLine": 138,
        "endChar": 78
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79e69372_70cbb357",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "So lets do all the validation checks first and then lets add the required defaults. So all check that return an error should go first and then add the checks that add the default values.",
      "range": {
        "startLine": 128,
        "startChar": 2,
        "endLine": 139,
        "endChar": 74
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e03305a6_673c2baa",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "I restructured this, thank you.",
      "parentUuid": "79e69372_70cbb357",
      "range": {
        "startLine": 128,
        "startChar": 2,
        "endLine": 139,
        "endChar": 74
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d74724b_b5f4440f",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Remove the `For instance` from all the suggestions. We should avoid copy/pasting code since it is easy add errors.",
      "range": {
        "startLine": 146,
        "startChar": 10,
        "endLine": 146,
        "endChar": 23
      },
      "fixSuggestions": [
        {
          "fixId": "31d6dfe1_798a582c",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 146,
                "startChar": 0,
                "endLine": 148,
                "endChar": 0
              },
              "replacement": "        \"Set --event app-startup to perform a test for an app-startup.\")\n"
            }
          ]
        }
      ],
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1aa5af76_d40770bb",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Removed this from all suggestions, thank you.",
      "parentUuid": "1d74724b_b5f4440f",
      "range": {
        "startLine": 146,
        "startChar": 10,
        "endLine": 146,
        "endChar": 23
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8390048e_33c8d637",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "We can use the following suggestion:\n\n`To profile an app startup run: torq --event app-startup --app \u003cpackage-name\u003e`",
      "range": {
        "startLine": 146,
        "startChar": 24,
        "endLine": 147,
        "endChar": 23
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efa0a51a_7b1a0891",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Changed the suggestion, thank you.",
      "parentUuid": "8390048e_33c8d637",
      "range": {
        "startLine": 146,
        "startChar": 24,
        "endLine": 147,
        "endChar": 23
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d19fddd9_ba81042d",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Don\u0027t need the comment. Please go through the other comments and verify if they are necessary or if they can be easily understood from the code or the error message.",
      "range": {
        "startLine": 149,
        "startChar": 1,
        "endLine": 149,
        "endChar": 71
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b468f5fb_0b297d0c",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Ok, I ended up removing the rest of the comments from the function because the error message and suggestion strings outlines what each check does, so I don\u0027t think any of the comments are needed, thank you.",
      "parentUuid": "d19fddd9_ba81042d",
      "range": {
        "startLine": 149,
        "startChar": 1,
        "endLine": 149,
        "endChar": 71
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8724e48c_059696a7",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 153,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "We don\u0027t need a suggestion for this case. The error is already self explanatory.",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 49
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87ed3e4b_7b25537d",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 153,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Removed this, thank you.",
      "parentUuid": "8724e48c_059696a7",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 49
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "548d4c97_ce154371",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Use this suggestion:\n```\nTo capture the simpleperf event run: torq --profiler simpleperf --simpleperf-event \u003cevent-name1\u003e --simpleperf-event \u003cevent-name2\u003e\n```\n\nFor this case, lets dynamically create the suggestion to include the simpleperf events already provided.",
      "range": {
        "startLine": 161,
        "startChar": 9,
        "endLine": 162,
        "endChar": 28
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3c6815d_83528d0f",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Added this, thank you.",
      "parentUuid": "548d4c97_ce154371",
      "range": {
        "startLine": 161,
        "startChar": 9,
        "endLine": 162,
        "endChar": 28
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9cba1fa_c7b03c31",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Remember to remove the `For instance`.",
      "range": {
        "startLine": 171,
        "startChar": 10,
        "endLine": 171,
        "endChar": 23
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d2d05c3_11a4ac41",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9cba1fa_c7b03c31",
      "range": {
        "startLine": 171,
        "startChar": 10,
        "endLine": 171,
        "endChar": 23
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8acc287_8f698b2f",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 186,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Lets use the constant variable already defined for this. And lets follow the same approach as `dur-ms`.",
      "range": {
        "startLine": 186,
        "startChar": 27,
        "endLine": 186,
        "endChar": 31
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4cd4d3a_25180805",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 186,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8acc287_8f698b2f",
      "range": {
        "startLine": 186,
        "startChar": 27,
        "endLine": 186,
        "endChar": 31
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fca7744_c5c89c9d",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "```suggestion\n         \" if --runs is not greater than 1.\"),\n```",
      "range": {
        "startLine": 200,
        "startChar": 11,
        "endLine": 200,
        "endChar": 47
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d43cb406_9bebdb6a",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Fixed this, thanks.",
      "parentUuid": "5fca7744_c5c89c9d",
      "range": {
        "startLine": 200,
        "startChar": 11,
        "endLine": 200,
        "endChar": 47
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65ded8f4_7f410b83",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 211,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "This logic can be simplified to:\n\n```suggestion\n  if args.ui is None:\n    args.ui \u003d args.runs \u003d\u003d 1\n```",
      "range": {
        "startLine": 205,
        "startChar": 2,
        "endLine": 211,
        "endChar": 19
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cfa980f_c6bca2b2",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 211,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Simplified this, thank you.",
      "parentUuid": "65ded8f4_7f410b83",
      "range": {
        "startLine": 205,
        "startChar": 2,
        "endLine": 211,
        "endChar": 19
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be3b081e_1bf52dd1",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Let use this suggestion instead:\n```\nUse one of the following subcommands:\\n\ntorq hw set \u003cconfig-name\u003e\\n\ntorq hw get\\n\ntorq hw list\n```",
      "range": {
        "startLine": 236,
        "startChar": 24,
        "endLine": 237,
        "endChar": 76
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "987a6276_4672c5fd",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 237,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Changed this, thank you.",
      "parentUuid": "be3b081e_1bf52dd1",
      "range": {
        "startLine": 236,
        "startChar": 24,
        "endLine": 237,
        "endChar": 76
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b02efa4_e23db36e",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "We don\u0027t use parentheses for if statements in python. Check other if statements.",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 242,
        "endChar": 61
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "136788f6_234f4365",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "I don\u0027t think this is the correct argument to check here. `args.config` is for the config subcommand? Shouldn\u0027t it be something like `args.hw_subcommand.config`?",
      "range": {
        "startLine": 242,
        "startChar": 6,
        "endLine": 242,
        "endChar": 17
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2415ffa2_42d2841f",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "The parser defines it as args.config. In the parser, argparse defines the arguments as the direct argument name even if it belongs to a subparser. I checked that it\u0027s the correct value I tested it. Let me know if you want me to rename the value to avoid the confusion. Thank you.",
      "parentUuid": "136788f6_234f4365",
      "range": {
        "startLine": 242,
        "startChar": 6,
        "endLine": 242,
        "endChar": 17
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca391b63_37facfbb",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "I added this because of the line breaks. If I remove them, the program fails. I can use the explicit \\ break instead, but Ethan showed me a Google Python style doc, that said I should try to use implicit line breaks () instead of explicit \\ when using long conditionals. I use parenthesis throughout the file to wrap very long conditionals. Let me know if you think I should use \\ instead and remove the parenthesis. Thank you.",
      "parentUuid": "3b02efa4_e23db36e",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 242,
        "endChar": 61
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12221d7c_9efd0bc5",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 252,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-12T22:08:47Z",
      "side": 1,
      "message": "Same question here as mention in previous comment. args.config is correct?",
      "range": {
        "startLine": 252,
        "startChar": 7,
        "endLine": 252,
        "endChar": 17
      },
      "fixSuggestions": [
        {
          "fixId": "c560c16f_a185fe3a",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 242,
                "startChar": 0,
                "endLine": 243,
                "endChar": 0
              },
              "replacement": "      args.num_cpus is not None):\n"
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 252,
                "startChar": 0,
                "endLine": 253,
                "endChar": 0
              },
              "replacement": "      args.memory is not None):\n"
            },
            {
              "path": "torq/torq.py",
              "range": {
                "startLine": 296,
                "startChar": 0,
                "endLine": 297,
                "endChar": 0
              },
              "replacement": "      args.num_cpus is None and args.memory is None):\n"
            }
          ]
        }
      ],
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b660943_2ab465e5",
        "filename": "torq/torq.py",
        "patchSetId": 6
      },
      "lineNbr": 252,
      "author": {
        "id": 3502236
      },
      "writtenOn": "2024-07-12T23:58:37Z",
      "side": 1,
      "message": "Yes, as explained in comment #242, thank you.",
      "parentUuid": "12221d7c_9efd0bc5",
      "range": {
        "startLine": 252,
        "startChar": 7,
        "endLine": 252,
        "endChar": 17
      },
      "revId": "4ac7bc6fcc545c886e1fa36714a0de8737ebc035",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}