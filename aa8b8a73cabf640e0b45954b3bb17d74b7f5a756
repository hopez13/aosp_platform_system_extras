{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "66bf5969_3aac5dbd",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2023-04-26T21:29:18Z",
      "side": 1,
      "message": "Doesn\u0027t the existing loop below already join all the threads before returning?",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b07f9c9_adac6c85",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-04-26T21:30:50Z",
      "side": 1,
      "message": "we\u0027re running into a problem where if the check fails we never end up joining the threads and we get a memory leak as per b/279705058.",
      "parentUuid": "66bf5969_3aac5dbd",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68ad68ac_690c04eb",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2023-04-26T21:35:51Z",
      "side": 1,
      "message": "Reading the bug, the problem is that `check` returns if the condition isn\u0027t met. Just drop the `check(left \u003d\u003d 0)` line to fix the issue. `rc` should already be negative if this happens, but maybe you can double check that we\u0027re returning an error in that case.",
      "parentUuid": "5b07f9c9_adac6c85",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fe2ae04_84b144dd",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2023-04-26T21:37:37Z",
      "side": 1,
      "message": "Come to think of it, maybe it would be a good idea to figure out why `left` isn\u0027t zero. We\u0027re not leaving the loop until we try to start all the threads, right? Is there some other issue at play here?",
      "parentUuid": "68ad68ac_690c04eb",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caea44ce_debf6b7b",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-04-26T21:58:33Z",
      "side": 1,
      "message": "If the logic works out, then it does look like left \u003d\u003d 0 should always be the case. I can ask the folks who filed the bug to find out more details as to why this check is failing before adding to this CL.",
      "parentUuid": "1fe2ae04_84b144dd",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eabf4ff5_44f65def",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2023-04-26T22:23:15Z",
      "side": 1,
      "message": "Is there a bug in any of the calculations above for how many bytes to process per thread? Do we know what are the arguments for the call when it fails?",
      "parentUuid": "caea44ce_debf6b7b",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c327fa_b93bf848",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-04-27T18:03:53Z",
      "side": 1,
      "message": "Hey Sami, Vivo sent over the arguments in b/279705058, could you help out to see why the calculations aren\u0027t working out?",
      "parentUuid": "eabf4ff5_44f65def",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b00be69_47b725ac",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2023-04-27T19:01:54Z",
      "side": 1,
      "message": "The calculation for `blocks` is wrong. The range we want to read spans two blocks, but we end up reading only the part in the first block.",
      "parentUuid": "c9c327fa_b93bf848",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c408db79_06e80f83",
        "filename": "libfec/fec_process.cpp",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-04-26T21:26:35Z",
      "side": 1,
      "message": "Create a vector of unique_ptr for pthread handles, and let RAII do the destruction for us.",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 121,
        "endChar": 5
      },
      "revId": "aa8b8a73cabf640e0b45954b3bb17d74b7f5a756",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}