{
  "comments": [
    {
      "key": {
        "uuid": "59961214_b4c016db",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-05-04T18:48:11Z",
      "side": 1,
      "message": "Alternatively, can we put a constructor here to init all \u00270\u0027 when allocation?",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a33ab89_6fec9967",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2017-05-04T18:59:52Z",
      "side": 1,
      "message": "I also thought about this solution, but in function bool EventSelectionSet::ReadCounters(std::vector\u003cCountersInfo\u003e* counters), each time it creates a new PerfCounter. So it can\u0027t survive between reads.",
      "parentUuid": "59961214_b4c016db",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e9f9952_75389da6",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-05-04T22:18:18Z",
      "side": 1,
      "message": "Maybe I missed something, but looks like it is either copied form hotplugged_counters or created from https://cs.corp.google.com/android/system/extras/simpleperf/event_selection_set.cpp?q\u003dEventSelectionSet::ReadCounters\u0026sq\u003dpackage:%5Eandroid$\u0026l\u003d472\nwhich should call the default c\u0027tor in nested struct?",
      "parentUuid": "7a33ab89_6fec9967",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac1479eb_96f75738",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2017-05-04T22:58:00Z",
      "side": 1,
      "message": "In EventSelectionSet::ReadCounters(),\neach time it creates a new CounterInfo counter; which we can initialize to 0. But it doesn\u0027t help solving our problem.\n\nAccording to the code in EventFd::ReadCounter(), we want to trace the difference between current counter and the previous counter. That\u0027s why we need a place to keep previous counter.",
      "parentUuid": "4e9f9952_75389da6",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc64370f_0720a41a",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-05-04T23:05:45Z",
      "side": 1,
      "message": "I see, the code changed during code review last time. I originally thought just use systrace to get raw couter dump instead of incremental. In this case, we need some place to cache and do it in eventfd makes sense.",
      "parentUuid": "ac1479eb_96f75738",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcc76978_c60ad15c",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-05-04T18:48:11Z",
      "side": 1,
      "message": "PerfCounter is held somewhere else, so this is a dup?",
      "range": {
        "startLine": 128,
        "startChar": 11,
        "endLine": 128,
        "endChar": 25
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e2fca_925d921e",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-04T23:19:47Z",
      "side": 1,
      "message": "this is \"last atrace counter value\"? make the name more specific and/or add a comment?",
      "range": {
        "startLine": 128,
        "startChar": 11,
        "endLine": 128,
        "endChar": 25
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5607205_521bd6cf",
        "filename": "simpleperf/event_fd.h",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2017-05-05T00:07:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e0e2fca_925d921e",
      "range": {
        "startLine": 128,
        "startChar": 11,
        "endLine": 128,
        "endChar": 25
      },
      "revId": "d6bfe716743020b63e3b2a9584c4085d4202d555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}