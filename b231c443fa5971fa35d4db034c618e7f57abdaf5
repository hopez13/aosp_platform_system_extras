{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4dc072f7_2118a1c3",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "If we are trying to test the default value, then we shouldn\u0027t pass the `-o` argument at all. We just need to check the default value is used. But I think this was already tested in the first test, so we might not even need this test case.",
      "range": {
        "startLine": 121,
        "startChar": 50,
        "endLine": 121,
        "endChar": 65
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21ebd44b_e50a8b81",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "`isfile` is only being used to validate the perfetto_config, so we don\u0027t need to mock it here. For `isdir`, we can simply set it to False. There is no check actually being made for the different names.",
      "range": {
        "startLine": 133,
        "startChar": 4,
        "endLine": 133,
        "endChar": 61
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b4897bc_3f1884dd",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "We don\u0027t need this case, this is essentially testing the same thing as above.",
      "range": {
        "startLine": 143,
        "startChar": 3,
        "endLine": 150,
        "endChar": 73
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "013ae52d_fc3f6f83",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 173,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "No need for this since `--fake-ui` is not a valid argument.",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 173,
        "endChar": 25
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c615e095_6ff46483",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Again, pass the explicit value on the command similar to what the user will do.",
      "range": {
        "startLine": 176,
        "startChar": 32,
        "endLine": 176,
        "endChar": 65
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6610ad41_2000d0f4",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 182,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Actually no need for this case, you are already testing the default value in the first test.",
      "range": {
        "startLine": 176,
        "startChar": 4,
        "endLine": 182,
        "endChar": 49
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0fbc4ef_1040228c",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Don\u0027t need to do string formatting. You can simply pass the string directly.",
      "range": {
        "startLine": 184,
        "startChar": 32,
        "endLine": 184,
        "endChar": 56
      },
      "fixSuggestions": [
        {
          "fixId": "b88808bb_17deedef",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "torq/tests/torq_unit_test.py",
              "range": {
                "startLine": 184,
                "startChar": 0,
                "endLine": 185,
                "endChar": 0
              },
              "replacement": "    parser \u003d self.set_up_parser(\"torq.py -d 100000\")\n"
            }
          ]
        }
      ],
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69bc36c1_17923bb6",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 200,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Pass the minimum value directly. If the MIN_DURATION_MS changes this will break the tests, which will make us aware of the change. Do the same below.",
      "range": {
        "startLine": 200,
        "startChar": 52,
        "endLine": 200,
        "endChar": 74
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6968fa21_1a3d4f90",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 222,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Pass the raw value.",
      "range": {
        "startLine": 222,
        "startChar": 35,
        "endLine": 222,
        "endChar": 49
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e99bea9_d2cb9c2b",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 239,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Pass raw value, same below.",
      "range": {
        "startLine": 239,
        "startChar": 39,
        "endLine": 239,
        "endChar": 54
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c3d4b62_15e56dd7",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 329,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "I don\u0027t think we call `isdir` for perfetto config. No need for the mock",
      "range": {
        "startLine": 328,
        "startChar": 4,
        "endLine": 329,
        "endChar": 64
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57212aff_0b6fb8d2",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 330,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "I think we can simply set to False.",
      "range": {
        "startLine": 330,
        "startChar": 4,
        "endLine": 330,
        "endChar": 61
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59b39ca7_0804bfce",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 331,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Use `unexisting-file` instead, it is more descriptive.",
      "range": {
        "startLine": 331,
        "startChar": 59,
        "endLine": 331,
        "endChar": 68
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c63bb2aa_9971f5d8",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 358,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "No need for this case, we should test for the default value in the initial test case.",
      "range": {
        "startLine": 349,
        "startChar": 4,
        "endLine": 358,
        "endChar": 57
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e37fc502_0b640cf4",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 375,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Need, to also check the memory argument. Please, don\u0027t simply copy/paste the code, but actually check we are asserting all the proper conditions. Same below.",
      "range": {
        "startLine": 375,
        "startChar": 4,
        "endLine": 375,
        "endChar": 38
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7c05628_a0cd01d2",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 427,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "No need to double test. Let\u0027s simply move the new cases in this test to the test above. Rename the above test to reflect we are testing both: cpu and memory",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 427,
        "endChar": 39
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef79280f_d3b562ad",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 541,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "What are we testing here? We might not need these cases.",
      "range": {
        "startLine": 519,
        "startChar": 4,
        "endLine": 541,
        "endChar": 48
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51993632_e4030f30",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 552,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Again, not sure if we need to test this.",
      "range": {
        "startLine": 549,
        "startChar": 4,
        "endLine": 552,
        "endChar": 25
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38038394_5b6ed532",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 576,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "All the tests related to `hw set` should be in the same place. Group the tests based on the command they are testing. This makes it easier to search for tests.",
      "range": {
        "startLine": 554,
        "startChar": 1,
        "endLine": 576,
        "endChar": 0
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7ea987c_30bfa2b2",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 594,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "We should also be testing the suggestions. Same below.",
      "range": {
        "startLine": 592,
        "startChar": 4,
        "endLine": 594,
        "endChar": 54
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90211a3d_c6477e86",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 611,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Also, assert that length of simpleperf events is one and that it is cpu-cycles.",
      "range": {
        "startLine": 611,
        "startChar": 4,
        "endLine": 611,
        "endChar": 33
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6430d0b_39fda5a2",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 624,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Can remove `_verify_args` from the method name. Not necessary. Same for other tests.",
      "range": {
        "startLine": 624,
        "startChar": 10,
        "endLine": 624,
        "endChar": 22
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ada36cd_62694ad8",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 680,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Also, assert the value of exclude-ftrace-event, same for below cases.",
      "range": {
        "startLine": 680,
        "startChar": 0,
        "endLine": 680,
        "endChar": 33
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a582a5e4_64a58aa3",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 735,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Move with the other hw set command tests.",
      "range": {
        "startLine": 721,
        "startChar": 2,
        "endLine": 735,
        "endChar": 25
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14b253c8_9751428a",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 762,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Move with the ui argument tests.",
      "range": {
        "startLine": 737,
        "startChar": 2,
        "endLine": 762,
        "endChar": 36
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1ccfed2_b5d2e999",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 771,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Add assertions for the simpleperf events argument.",
      "range": {
        "startLine": 771,
        "startChar": 4,
        "endLine": 771,
        "endChar": 33
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a7ce8ad_8beba6fa",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 782,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Didn\u0027t this include the event that was redundant?",
      "range": {
        "startLine": 780,
        "startChar": 4,
        "endLine": 782,
        "endChar": 50
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7781316_23f5b9f3",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 798,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Move with other hw set commands",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 798,
        "endChar": 53
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be525165_259aef12",
        "filename": "torq/tests/torq_unit_test.py",
        "patchSetId": 8
      },
      "lineNbr": 816,
      "author": {
        "id": 1884365
      },
      "writtenOn": "2024-07-24T22:19:52Z",
      "side": 1,
      "message": "Don\u0027t think we need these test cases.",
      "range": {
        "startLine": 800,
        "startChar": 2,
        "endLine": 816,
        "endChar": 25
      },
      "revId": "b231c443fa5971fa35d4db034c618e7f57abdaf5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}