{
  "comments": [
    {
      "key": {
        "uuid": "2b736025_659b068b",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2015-02-17T16:19:03Z",
      "side": 1,
      "message": "getopt_long says[1] that the last element of the long_options array has to be filled with zeros, but there\u0027s no sentinel element at the end of long_options. \n\n[1] http://linux.die.net/man/3/getopt_long",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bc21c57_1457d4a1",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2015-02-17T16:19:03Z",
      "side": 1,
      "message": "I believe that new throws an exception (or aborts the process if exceptions are disabled) rather than returning NULL. (Here and elsewhere.)",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22dc672f_3da4afc7",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1004424
      },
      "writtenOn": "2015-02-26T11:03:30Z",
      "side": 1,
      "message": "yes, if i remember correctly exceptions are turned of an process aborts, however the FATAL(..) macro does pretty much the same, print and exit(1). \n\nDo you think its worth the effort to remove the i statements? Another option would be to add (std::nothrow) to the new call and things would work as intended, but same as above is it worth the effort?",
      "parentUuid": "0bc21c57_1457d4a1",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6242dfdd_3fdb8775",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2015-02-26T21:02:52Z",
      "side": 1,
      "message": "I\u0027m not sure. It\u0027s odd to have if statements that can\u0027t happen, but I don\u0027t really know this code at all and don\u0027t maintain it.",
      "parentUuid": "22dc672f_3da4afc7",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "025843e4_e4deda18",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1004424
      },
      "writtenOn": "2015-02-27T09:57:07Z",
      "side": 1,
      "message": "Agree its odd, probably just a c programmer doing this out of habit, just a guess however.",
      "parentUuid": "6242dfdd_3fdb8775",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42787b6f_f6c4a06b",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-02-27T18:58:11Z",
      "side": 1,
      "message": "This was originally a calloc, I changed it to new for consistency but didn\u0027t remove the error checking.",
      "parentUuid": "025843e4_e4deda18",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc89475_f6da6099",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2015-02-17T16:19:03Z",
      "side": 1,
      "message": "There\u0027s no error checking here! (Also, an unsigned long long could be longer than 64 bits, although I\u0027m not sure that I would care about that.)",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bc21c57_7466488d",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2015-02-17T16:19:03Z",
      "side": 1,
      "message": "Do these types also need to be changed? (I\u0027m unsure quite what this code is doing.)",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2a7af21_abbf2909",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1004424
      },
      "writtenOn": "2015-02-27T11:18:32Z",
      "side": 1,
      "message": "If calculate_size is big enough this is a problem, however since this is the size of the image on a device, I do not think this is a problem in practice.\n\nThe size of the image needs to be in Terabyte range for this to be a problem since size is divided by block_size (4092) and hash_per_block(minimum 2).",
      "parentUuid": "0bc21c57_7466488d",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bc21c57_946a044e",
        "filename": "verity/build_verity_tree.cpp",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2015-02-17T16:19:03Z",
      "side": 1,
      "message": "(the multiplication here can probably overflow a size_t if the types aren\u0027t changed above.)",
      "revId": "3f3c33f10b47310b64265bb47b5699484a0fed74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}