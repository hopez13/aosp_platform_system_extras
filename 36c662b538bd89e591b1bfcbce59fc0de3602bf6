{
  "comments": [
    {
      "key": {
        "uuid": "339be98e_5542ccbf",
        "filename": "simpleperf/cmd_report.cpp",
        "patchSetId": 6
      },
      "lineNbr": 507,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-07-01T00:57:39Z",
      "side": 1,
      "message": "or you could just have a default implementation of Compare that returns 0 and lose comparable_items_?",
      "revId": "36c662b538bd89e591b1bfcbce59fc0de3602bf6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "339be98e_75539062",
        "filename": "simpleperf/cmd_report.cpp",
        "patchSetId": 6
      },
      "lineNbr": 507,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-01T01:16:33Z",
      "side": 1,
      "message": "Although providing a default implementation of Compare is less ugly than judging if compare_function is nullptr before. I prefer to keep separate item arrays for display and sort. The process is first sort then display, the keys used to sort are not exactly the same as the keys used to display. It sucks when trying to think how to compare samples by their sample count.",
      "parentUuid": "339be98e_5542ccbf",
      "revId": "36c662b538bd89e591b1bfcbce59fc0de3602bf6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}