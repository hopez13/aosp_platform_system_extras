{
  "comments": [
    {
      "key": {
        "uuid": "5127c0dc_3a7afcf4",
        "filename": "simpleperf/scripts/annotate.py",
        "patchSetId": 2
      },
      "lineNbr": 636,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "This will format funny in the help text (all subsequent lines will be indented). \n\n    parser \u003d argparse.ArgumentParser(description\u003dtextwrap.dedent(\"\"\"\\\n        Annotate...\"\"\"))\n\nIt will automatically remove the common indentation from the string while still letting you keep the expected indentation.",
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c400bb5_18ea92b5",
        "filename": "simpleperf/scripts/annotate.py",
        "patchSetId": 2
      },
      "lineNbr": 636,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "argparse automatically formats the description and help message, so it doesn\u0027t matter how the string is formatted in source code. So textwrap.dedent doesn\u0027t change the output.",
      "parentUuid": "5127c0dc_3a7afcf4",
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b847a94b_6e336cab",
        "filename": "simpleperf/scripts/annotate.py",
        "patchSetId": 2
      },
      "lineNbr": 636,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T21:30:21Z",
      "side": 1,
      "message": "Cool, didn\u0027t know argparse did that internally.",
      "parentUuid": "3c400bb5_18ea92b5",
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43a99f38_5525a031",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-06-13T04:16:15Z",
      "side": 1,
      "message": "nit: they can be merged into one line as well\n\nfrom utils import (log_info, ...)",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 54
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c54289d6_3de55982",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43a99f38_5525a031",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 54
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8861d4a_d75d831f",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-06-13T04:16:15Z",
      "side": 1,
      "message": "{} might be more pythonic, unless we want to support pre 2.7 (seeing existing {} in other files anyway, such as in annotate.py)",
      "range": {
        "startLine": 53,
        "startChar": 24,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b45a94a7_0aca1503",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "Yes, prefer {} to dict().",
      "parentUuid": "f8861d4a_d75d831f",
      "range": {
        "startLine": 53,
        "startChar": 24,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cc6424d_26114e61",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done, also fixed other dict().",
      "parentUuid": "b45a94a7_0aca1503",
      "range": {
        "startLine": 53,
        "startChar": 24,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b704db40_53babe3a",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-06-13T04:16:15Z",
      "side": 1,
      "message": "inconsistent break style (e.g. L195)",
      "range": {
        "startLine": 133,
        "startChar": 16,
        "endLine": 133,
        "endChar": 19
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "265a98fe_30c4005d",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "When conditionals get this long, best to factor out a function IMO.\n\n    def _needs_to_copy(self, target_file, expected_build_id):\n        if os.path.isfile(target_file):\n            return False\n        if self._read_build_id(target_file) \u003d\u003d expected_build_id:\n            return False\n        if self._file_has_symbol_table(target_file):\n            return False\n        return True\n\nThen this becomes simply:\n\n    if not self._needs_to_copy(target_file, expected_build_id):\n        return",
      "parentUuid": "b704db40_53babe3a",
      "range": {
        "startLine": 133,
        "startChar": 16,
        "endLine": 133,
        "endChar": 19
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95239d95_c4273ddc",
        "filename": "simpleperf/scripts/binary_cache_builder.py",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "265a98fe_30c4005d",
      "range": {
        "startLine": 133,
        "startChar": 16,
        "endLine": 133,
        "endChar": 19
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30d036d3_845ed508",
        "filename": "simpleperf/scripts/inferno/inferno.py",
        "patchSetId": 2
      },
      "lineNbr": 316,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "`_symbol, _callchain` is preferable imo. Marks them as unused while still being useful as documentation of the function signature.",
      "range": {
        "startLine": 316,
        "startChar": 30,
        "endLine": 316,
        "endChar": 32
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac0bc789_dda88bb5",
        "filename": "simpleperf/scripts/inferno/inferno.py",
        "patchSetId": 2
      },
      "lineNbr": 316,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30d036d3_845ed508",
      "range": {
        "startLine": 316,
        "startChar": 30,
        "endLine": 316,
        "endChar": 32
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43b7df86_b3fcc8c3",
        "filename": "simpleperf/scripts/pprof_proto_generator.py",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-06-13T04:16:15Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 179,
        "startChar": 36,
        "endLine": 179,
        "endChar": 43
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43ff6e8e_bf7016bc",
        "filename": "simpleperf/scripts/pprof_proto_generator.py",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "Better yet:\n\n    for sample_type_id, value in values.items():\n        self.add_value(sample_type_id, value)",
      "parentUuid": "43b7df86_b3fcc8c3",
      "range": {
        "startLine": 179,
        "startChar": 36,
        "endLine": 179,
        "endChar": 43
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b96c3676_647d0df9",
        "filename": "simpleperf/scripts/pprof_proto_generator.py",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43ff6e8e_bf7016bc",
      "range": {
        "startLine": 179,
        "startChar": 36,
        "endLine": 179,
        "endChar": 43
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7f8617f_da73fbf0",
        "filename": "simpleperf/scripts/pprof_proto_generator.py",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "Is this still necessary after moving all of the member decls into __init__?",
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe44222c_80eec763",
        "filename": "simpleperf/scripts/pprof_proto_generator.py",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "yes, because pylint can\u0027t find methods in profile_pb2, which is generated by protobuf.",
      "parentUuid": "e7f8617f_da73fbf0",
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be8931c5_1e0731da",
        "filename": "simpleperf/scripts/pprof_proto_generator.py",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T21:30:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fe44222c_80eec763",
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ea7d331_77f644b5",
        "filename": "simpleperf/scripts/report_html.py",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "iterate_libs (or perhaps more simply \"libraries\" with @property). This doesn\u0027t actually enumerate anything.",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 21
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae302cdb_9446d8d1",
        "filename": "simpleperf/scripts/report_html.py",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ea7d331_77f644b5",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 21
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "249de03e_390a947b",
        "filename": "simpleperf/scripts/report_html.py",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-06-13T04:16:15Z",
      "side": 1,
      "message": "excess \"",
      "range": {
        "startLine": 408,
        "startChar": 7,
        "endLine": 408,
        "endChar": 8
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8765331_4dc5e652",
        "filename": "simpleperf/scripts/report_html.py",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "249de03e_390a947b",
      "range": {
        "startLine": 408,
        "startChar": 7,
        "endLine": 408,
        "endChar": 8
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "941b0141_b7187c63",
        "filename": "simpleperf/scripts/report_sample.py",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-06-13T04:16:15Z",
      "side": 1,
      "message": "PEP-8 suggests \"Surround top-level function and class definitions with two blank lines.\"",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 1
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9f6e076_96a10038",
        "filename": "simpleperf/scripts/report_sample.py",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done. I know, but it is not enforced by pylint, and I feel that\u0027s too much space (may be because I am used to c++ code).",
      "parentUuid": "941b0141_b7187c63",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 1
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "553fc1bd_a4557309",
        "filename": "simpleperf/scripts/report_sample.py",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T21:30:21Z",
      "side": 1,
      "message": "I think the `pep8` tool is the one that will catch this for you. Not 100% sure since I just have my editor run a whole bunch of them and I\u0027m not always sure which warnings come from which tool :)",
      "parentUuid": "f9f6e076_96a10038",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 1
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90687963_29186381",
        "filename": "simpleperf/scripts/simpleperf_report_lib.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-06-13T06:12:59Z",
      "side": 1,
      "message": "RuntimeError, or maybe:\n\n    class CheckFailure(RuntimeError):\n        pass",
      "range": {
        "startLine": 47,
        "startChar": 14,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4d04778_8fe984e7",
        "filename": "simpleperf/scripts/simpleperf_report_lib.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-13T21:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90687963_29186381",
      "range": {
        "startLine": 47,
        "startChar": 14,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "30c77c5fdd381a626cd2551fcb5dfd9a69af30c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}