{
  "comments": [
    {
      "key": {
        "uuid": "ef007a57_64fcbdba",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-05-11T16:18:25Z",
      "side": 1,
      "message": "is this really faster than push_back/emplace_back?",
      "range": {
        "startLine": 265,
        "startChar": 8,
        "endLine": 266,
        "endChar": 47
      },
      "revId": "2a82b1e442926bff50173a28042192eec19e2c22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58a881c8_4347c5b6",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-05-12T00:22:24Z",
      "side": 1,
      "message": "Here it only create a string once, at L271. push_back needs to create a string twice and destroy it once.\nI didn\u0027t use emplace_back because I didn\u0027t add constructor to ThreadMmap.",
      "parentUuid": "ef007a57_64fcbdba",
      "range": {
        "startLine": 265,
        "startChar": 8,
        "endLine": 266,
        "endChar": 47
      },
      "revId": "2a82b1e442926bff50173a28042192eec19e2c22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb740715_3a347c03",
        "filename": "simpleperf/environment.cpp",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-05-12T15:40:17Z",
      "side": 1,
      "message": "wouldn\u0027t adding the constructor be cleaner? +tomcherry for C++ style.",
      "parentUuid": "58a881c8_4347c5b6",
      "range": {
        "startLine": 265,
        "startChar": 8,
        "endLine": 266,
        "endChar": 47
      },
      "revId": "2a82b1e442926bff50173a28042192eec19e2c22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}